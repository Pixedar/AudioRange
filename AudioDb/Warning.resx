<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABmCAYAAAA9KjRfAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAAd0SU1FB98JGxAOD7euJdoAAAP0SURBVHhe7dxNctRADIbhLMgpuBNnyP1vkLCA
        6lQZ2j2vZ9r2p58ZS1XPYgSWuqUKIRnI2+evj7S+fvz8Y4F6ZYHJSDRAS3SGSJj0REOKRGf0hEkPNAyl
        T8jtQWf2gElLdPnM6A6WMGmBLvtM6E4WMKlGF3xGdDc1TKrQpV4B3VUFkwp0kVdCd1bA5Bl0+FdGMzgD
        k0fRga+AZnEUJveiQz6b35Dbi2azFyb3osM9qzNfUNJs9sLkLDpUObcYTM6iw5SghdBBLKiDeligmc3A
        5CN0ACvqoB5WaHaPYPIeamxJHdTDEs3wHkxuoYbW1EE9rNEst2ByCzWzpg7qYY1muQWTI2riRR3UwwvN
        doTJERX3og7q4YVmO8Jkjwp7Ugf18EQz7mGyR0U9qYN6eKIZ9zC5oILe1EE9vNGsF5hcULGvd8gZUgf1
        8EazXmCyoUIR1EE9ItDMG0xSgSjqoB5RaPY3iYYejqIO6hGFZn+ToAdnKN5xI+r4ruv8efCecf6rFw09
        FEkd1CPSOP/Vi4YeiqQO6hFpnP/qBT0QTR3UI1q/A1yI1eeDI9RBPaL1O7hZRi/DYtRBPTKYWkgG6qAe
        GdRCkolfyOTXAuqgHhnEL2SSOqhHBquF0G/IQh3Uw8ujvySdWsjZ/1Q5Sx3UQ0Exj/oISaYWksz3QugX
        MlEH9cikFpJMLSSZ3Qvx/v6WOqhHk+UbqvURkkwtJJP3Wkg6tZBkaiFbgv5lSi0kmVpIMm4LOfrdUHVQ
        j0zqIySZWkgytZBk0i/katK/QXUlT/GO4ZXUQpKphSTzbyG1FCd3vj+27EG6EIt33ZRB9bMwWYgFZVD9
        LGohydwsJOtSlEH1M+h3UAtJoN9BLSSBfgerhTT0QCRlUP1o4/xXLxp6KJIyqH60cf6rFw09FEkZVD/a
        OP/ViwU9GEUZVF/h6NvTNPubxIIKRFAG1X/E6t/80swbTDZUJIIyqH4UmnmDyQUV8qYMqh+BZr3A5IKK
        eVMG1Y9As15gskcFPSmD6nujGfcw2aOinpRB9b3RjHuYHFFhL8qg+p5otiNMEmrgQRlU3wvNlGByCzWy
        pgyq74FmuQWTW6jZlc1+0Uiz3ILJe6hh2UYzvAeTj1Djcotm9wgmZ9AByn80sxmYnEUHKceX0WByFh1m
        U6If722NZjULk3vRoTKz+uFrNJu9MHkEHfBKaCZHYPIoOugV0CyOwuQZdOBXRjM4A5MKdPhXQndWwKQK
        XeQV0F1VMKlGl3pGdDc1TFqgC2b5KW4z6E4WMGmpv2TEQlrPPX3pDpYw6YEuf4b6iz06swdMeqOBRKCz
        ecNkJBqUCv1RRWeIhMksxuGpUK8cPt7+AuN52Z0ExHsFAAAAAElFTkSuQmCC
</value>
  </data>
</root>